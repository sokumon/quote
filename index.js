let quote = [{ "start": 680, "end": 976, "text": "God's", "confidence": 0.29693, "speaker": null }, { "start": 976, "end": 1240, "text": "plan", "confidence": 0.99989, "speaker": null }, { "start": 1270, "end": 1422, "text": "is", "confidence": 0.99885, "speaker": null }, { "start": 1438, "end": 1566, "text": "like", "confidence": 0.99747, "speaker": null }, { "start": 1590, "end": 1750, "text": "a", "confidence": 1.0, "speaker": null }, { "start": 1782, "end": 2158, "text": "beautiful", "confidence": 0.48287, "speaker": null }, { "start": 2206, "end": 3074, "text": "tapestry.", "confidence": 0.98748, "speaker": null }, { "start": 3734, "end": 4022, "text": "And", "confidence": 0.99, "speaker": null }, { "start": 4038, "end": 4166, "text": "the", "confidence": 0.85, "speaker": null }, { "start": 4190, "end": 4526, "text": "tragedy", "confidence": 0.82773, "speaker": null }, { "start": 4550, "end": 4662, "text": "of", "confidence": 0.99, "speaker": null }, { "start": 4678, "end": 4878, "text": "being", "confidence": 0.99622, "speaker": null }, { "start": 4926, "end": 5158, "text": "human", "confidence": 0.99989, "speaker": null }, { "start": 5206, "end": 5366, "text": "is", "confidence": 0.99727, "speaker": null }, { "start": 5390, "end": 5574, "text": "that", "confidence": 0.98976, "speaker": null }, { "start": 5614, "end": 5742, "text": "we", "confidence": 0.99922, "speaker": null }, { "start": 5758, "end": 5934, "text": "only", "confidence": 0.99861, "speaker": null }, { "start": 5974, "end": 6126, "text": "get", "confidence": 0.99782, "speaker": null }, { "start": 6150, "end": 6286, "text": "to", "confidence": 1.0, "speaker": null }, { "start": 6310, "end": 6422, "text": "see", "confidence": 0.99981, "speaker": null }, { "start": 6438, "end": 6566, "text": "it", "confidence": 0.99738, "speaker": null }, { "start": 6590, "end": 6726, "text": "from", "confidence": 0.99811, "speaker": null }, { "start": 6750, "end": 6886, "text": "the", "confidence": 1.0, "speaker": null }, { "start": 6910, "end": 7474, "text": "back,", "confidence": 0.99826, "speaker": null }, { "start": 9094, "end": 9406, "text": "with", "confidence": 0.96894, "speaker": null }, { "start": 9430, "end": 9542, "text": "all", "confidence": 0.99869, "speaker": null }, { "start": 9558, "end": 10114, "text": "the", "confidence": 0.97, "speaker": null }, { "start": 10534, "end": 11014, "text": "ragged", "confidence": 0.99423, "speaker": null }, { "start": 11054, "end": 11406, "text": "threads", "confidence": 0.89675, "speaker": null }, { "start": 11430, "end": 11542, "text": "and", "confidence": 0.88, "speaker": null }, { "start": 11558, "end": 11662, "text": "the", "confidence": 0.96, "speaker": null }, { "start": 11678, "end": 11886, "text": "muddy", "confidence": 0.80532, "speaker": null }, { "start": 11910, "end": 12594, "text": "colors.", "confidence": 0.74232, "speaker": null }, { "start": 13054, "end": 13342, "text": "We", "confidence": 0.99641, "speaker": null }, { "start": 13358, "end": 13486, "text": "only", "confidence": 0.97162, "speaker": null }, { "start": 13510, "end": 13622, "text": "get", "confidence": 0.99466, "speaker": null }, { "start": 13638, "end": 13790, "text": "a", "confidence": 1.0, "speaker": null }, { "start": 13822, "end": 14278, "text": "hint", "confidence": 0.96954, "speaker": null }, { "start": 14406, "end": 14646, "text": "at", "confidence": 0.99, "speaker": null }, { "start": 14670, "end": 15262, "text": "the", "confidence": 0.99, "speaker": null }, { "start": 15438, "end": 15790, "text": "true", "confidence": 0.99909, "speaker": null }, { "start": 15822, "end": 16134, "text": "beauty", "confidence": 0.87073, "speaker": null }, { "start": 16174, "end": 16326, "text": "that", "confidence": 0.99651, "speaker": null }, { "start": 16350, "end": 16486, "text": "would", "confidence": 0.99422, "speaker": null }, { "start": 16510, "end": 16670, "text": "be", "confidence": 0.99756, "speaker": null }, { "start": 16702, "end": 17118, "text": "revealed", "confidence": 0.5451, "speaker": null }, { "start": 17166, "end": 17326, "text": "if", "confidence": 0.99866, "speaker": null }, { "start": 17350, "end": 17486, "text": "we", "confidence": 0.99765, "speaker": null }, { "start": 17510, "end": 17694, "text": "could", "confidence": 0.97958, "speaker": null }, { "start": 17734, "end": 17886, "text": "see", "confidence": 0.99974, "speaker": null }, { "start": 17910, "end": 18046, "text": "the", "confidence": 1.0, "speaker": null }, { "start": 18070, "end": 18270, "text": "whole", "confidence": 0.50213, "speaker": null }, { "start": 18302, "end": 18974, "text": "pattern", "confidence": 0.99787, "speaker": null }, { "start": 19134, "end": 19358, "text": "on", "confidence": 0.99625, "speaker": null }, { "start": 19366, "end": 19462, "text": "the", "confidence": 0.95, "speaker": null }, { "start": 19478, "end": 19654, "text": "other", "confidence": 0.99845, "speaker": null }, { "start": 19694, "end": 20274, "text": "side,", "confidence": 0.99828, "speaker": null }, { "start": 21854, "end": 22238, "text": "as", "confidence": 0.98988, "speaker": null }, { "start": 22286, "end": 22574, "text": "God", "confidence": 0.9965, "speaker": null }, { "start": 22614, "end": 22694, "text": "does.", "confidence": 0.99489, "speaker": null }]
let model_viewver = document.getElementById("word")
let start_button = document.getElementById("start")


function preload_things(){
    quote.forEach(function(element, index, array){
        element.text = element.text.replace(/[^a-zA-Z ]/g,"")
        element.text = element.text.toLowerCase()
        const preloadLink = document.createElement("link");
        preloadLink.href = `./models/${element.text}.gltf`; // Path to your GLTF model
        preloadLink.rel = "preload";
        preloadLink.as = "fetch";
        document.head.appendChild(preloadLink);
    });
}
preload_things()
function start_audio(){
    
    const audio_context = new AudioContext();
    const audio = new Audio("quote.wav");
    const source = audio_context.createMediaElementSource(audio);
    source.connect(audio_context.destination);
    audio.play()
    audio.ontimeupdate = function(){
        quote.forEach(function(element, index, array){
            element.text = element.text.replace(/[^a-zA-Z ]/g,"")
            element.text = element.text.toLowerCase()
            if( audio.currentTime >= (element.start / 1000) && audio.currentTime <= (element.end / 1000) )
                model_viewver.src = `/models/${element.text}.gltf`
        });
    }
}